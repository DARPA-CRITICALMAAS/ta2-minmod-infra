name: minmod

services:
  nginx:
    image: minmod-nginx
    build:
      context: ./containers/nginx/
    volumes:
      - ${CERT_DIR}:/certs/
    ports:
      - "80:80"
      - "443:443"
    networks:
      - minmod
    cap_add:
      - NET_BIND_SERVICE
  api:
    image: minmod-backend
    ports:
      - "8000:8000"
    networks:
      - minmod
    environment:
      - CFG_FILE=/home/criticalmaas/config/config.yml
    volumes:
      - type: bind
        source: ${CFG_FILE}
        target: /home/criticalmaas/config/config.yml
    command: fastapi run /home/criticalmaas/kg/minmodkg/api/main.py
  api_sync:
    image: minmod-backend
    environment:
      - CFG_FILE=/home/criticalmaas/config/config.yml
    networks:
      - minmod
    volumes:
      - type: bind
        source: main/ta2-minmod-data
        target: /home/criticalmaas/ta2-minmod-data
      - type: bind
        source: ${CFG_FILE}
        target: /home/criticalmaas/config/config.yml
    command: python -m minmodkg.services.sync /home/criticalmaas/ta2-minmod-data --backup-interval 3600 --verbose
  api_cdr_sync:
    image: minmod-backend
    environment:
      - CFG_FILE=/home/criticalmaas/config/config.yml
      - CDR_AUTH_TOKEN=${CDR_AUTH_TOKEN}
      - MINMOD_API=http://api:8000/api/v1
    networks:
      - minmod
    volumes:
      - type: bind
        source: ${CFG_FILE}
        target: /home/criticalmaas/config/config.yml
    command: python -m minmodkg.integrations.cdr --run-on-start --run-dir /home/criticalmaas/cdr --verbose
  api_sync_test:
    image: minmod-backend
    environment:
      - CFG_FILE=/home/criticalmaas/config/config.yml
    networks:
      - minmod
    volumes:
      - type: bind
        source: main/ta2-minmod-data-sample
        target: /home/criticalmaas/ta2-minmod-data-sample
      - type: bind
        source: ${CFG_FILE}
        target: /home/criticalmaas/config/config.yml
    command: python -m minmodkg.services.sync /home/criticalmaas/ta2-minmod-data-sample --backup-interval 30
  dashboard:
    image: minmod-dashboard
    ports:
      - "8050:8050"
    environment: 
      - API_ENDPOINT=${API_ENDPOINT:-http://api:8000/api/v1}
      - SPARQL_ENDPOINT=${SPARQL_ENDPOINT:-http://kg:3030/minmod/sparql}
    networks:
      - minmod
    command: "poetry run python app.py"
  editor:
    image: minmod-editor
    ports:
      - 9000:9000
    networks:
      - minmod
    environment:
      - MINMOD_API=http://api:8000
    command: python -m minmod_editor --port 9000

networks:
  minmod:
    name: minmod
    external: true